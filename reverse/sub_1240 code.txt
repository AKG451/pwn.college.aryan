sub_1240 code

__int64 __fastcall sub_1240(const char *a1)
{
  size_t v1; // rdx
  __int64 result; // rax
  __int64 i; // rax
  __m128i si128; // [rsp+0h] [rbp-88h]
  __m128i v5[2]; // [rsp+10h] [rbp-78h]
  _OWORD v6[4]; // [rsp+30h] [rbp-58h]
  __int64 v7; // [rsp+70h] [rbp-18h]
  __int16 v8; // [rsp+78h] [rbp-10h]

  si128 = _mm_load_si128((const __m128i *)&xmmword_2370);
  v5[0] = _mm_load_si128((const __m128i *)&xmmword_2380);
  *(__int64 *)((char *)&v5[0].m128i_i64[1] + 5) = 0x3070B0F0B070307LL;
  v6[0] = _mm_load_si128((const __m128i *)&xmmword_2330);
  v7 = 0x11C0183011C018FLL;
  v6[1] = _mm_load_si128((const __m128i *)&xmmword_2340);
  v8 = 433;
  v6[2] = _mm_load_si128((const __m128i *)&xmmword_2350);
  v6[3] = _mm_load_si128((const __m128i *)&xmmword_2360);
  v1 = strlen(a1);
  result = 0;
  if ( v1 == 37 )
  {
    for ( i = 0; i != 37; ++i )
    {
      if ( *((_WORD *)v6 + i) != 5 * (unsigned __int8)i + si128.m128i_u8[i] + 2 * (unsigned __int8)a1[i] )
        return 0;
    }
    return 1;
  }
  return result;
}